(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{MZxt:function(t,e,r){"use strict";r.r(e);var n=r("KHd+"),o=r("UQSp"),a=r("Kw5r");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}a.a.config.optionMergeStrategies;var s={VueRemarkRoot:o.a},d=function(t){var e=t.options.components=t.options.components||{},r=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render||"function"==typeof s[t]&&"function"==typeof s[t].options.render?e[t]=s[t]:r[t]=function(){return s[t]}}))},c=a.a.config.optionMergeStrategies,v="__vueRemarkFrontMatter",l={excerpt:null,title:"Listen for events",topic:"events",type:"how-to",roles:["THIRD_PARTY_DEVELOPER","OPERATOR"]};var p=function(t){t.options[v]&&(t.options[v]=l),a.a.util.defineReactive(t.options,v,l),t.options.computed=c.computed({$frontmatter:function(){return t.options[v]}},t.options.computed)},u=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("VueRemarkRoot",[r("h1",{attrs:{id:"how-to-listen-for-events"}},[r("a",{attrs:{href:"#how-to-listen-for-events","aria-hidden":"true"}},[t._v("#")]),t._v("How to listen for Events")]),r("h2",{attrs:{id:"overview"}},[r("a",{attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v("Overview")]),r("p",[t._v("The event API allows you to subscribe to a variety of different events generated by Working Group Two's systems.")]),r("p",[t._v("The examples will start a subscription to voice and voicemail events, which includes call initiated, call ended and\nnew voicemail received.")]),r("h2",{attrs:{id:"event-types"}},[r("a",{attrs:{href:"#event-types","aria-hidden":"true"}},[t._v("#")]),t._v("Event types")]),r("table",[r("thead",[r("tr",[r("th",[t._v("Event type")]),r("th",{attrs:{align:"center"}},[t._v("Operator")]),r("th",{attrs:{align:"center"}},[t._v("Third Party")]),r("th",[t._v("Required right")])])]),r("tbody",[r("tr",[r("td",[t._v("CONSENT_REVOKE_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("❌")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td")]),r("tr",[r("td",[t._v("HANDSET_UPDATE_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.handset_update.subscribe")])])]),r("tr",[r("td",[t._v("LOCATION_UPDATE_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.location.subscribe")])])]),r("tr",[r("td",[t._v("ROAMING_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.roaming.subscribe")])])]),r("tr",[r("td",[t._v("SMS_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.sms.subscribe")])])]),r("tr",[r("td",[t._v("SMS_DELIVERY_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.sms_delivery_report.subscribe")])])]),r("tr",[r("td",[t._v("TOKEN_AUDIT_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("❌")]),r("td",[r("code",{pre:!0},[t._v("events.audit.token.subscribe")])])]),r("tr",[r("td",[t._v("VOICE_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.voice.subscribe")])])]),r("tr",[r("td",[t._v("VOICEMAIL_EVENT")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",{attrs:{align:"center"}},[t._v("✔")]),r("td",[r("code",{pre:!0},[t._v("events.voicemail.subscribe")])])])])]),r("table",[r("thead",[r("tr",[r("th"),r("th")])]),r("tbody",[r("tr",[r("td",[t._v("✔")]),r("td",[t._v("Available")])]),r("tr",[r("td",[t._v("❌")]),r("td",[t._v("Not available")])])])]),r("h4",{attrs:{id:"consent-revoke"}},[r("a",{attrs:{href:"#consent-revoke","aria-hidden":"true"}},[t._v("#")]),t._v("Consent revoke")]),r("p",[t._v("This event will fire when the OAuth2.0 consent is revoked for a subscription.")]),r("p",[t._v("It allows the application to cleanup user state. This may either be via our\nrevoke flow or from customer support.")]),r("h4",{attrs:{id:"handset-update"}},[r("a",{attrs:{href:"#handset-update","aria-hidden":"true"}},[t._v("#")]),t._v("Handset update")]),r("p",[t._v("This event will fire when a SIM card is used in a new device.")]),r("p",[t._v("It will contain the previous and current IMEI.")]),r("h4",{attrs:{id:"location-update"}},[r("a",{attrs:{href:"#location-update","aria-hidden":"true"}},[t._v("#")]),t._v("Location update")]),r("p",[t._v("This event will fire when the handset is registering at a new location.")]),r("h4",{attrs:{id:"roaming"}},[r("a",{attrs:{href:"#roaming","aria-hidden":"true"}},[t._v("#")]),t._v("Roaming")]),r("p",[t._v("This event will fire on the first location update in a new country.")]),r("p",[t._v("It will contain the country code and name for the previous and current country.")]),r("h4",{attrs:{id:"sms"}},[r("a",{attrs:{href:"#sms","aria-hidden":"true"}},[t._v("#")]),t._v("Sms")]),r("p",[t._v("This event will fire every time an SMS is sent or received by the handset.")]),r("p",[t._v("This contains the from and to address in addition to the actual content of the SMS.")]),r("h4",{attrs:{id:"sms-delivery-report"}},[r("a",{attrs:{href:"#sms-delivery-report","aria-hidden":"true"}},[t._v("#")]),t._v("Sms delivery report")]),r("p",[t._v("This event will fire when a SMS delivery report is generated.")]),r("p",[t._v("This contains the from and to address, and the status for the SMS sent.")]),r("h4",{attrs:{id:"token-audit"}},[r("a",{attrs:{href:"#token-audit","aria-hidden":"true"}},[t._v("#")]),t._v("Token Audit")]),r("p",[t._v("This will fire for credentials created by the operator.")]),r("p",[t._v("This is for audit purposes for operators, and is not directly tied to a single subscription.")]),r("h4",{attrs:{id:"voice"}},[r("a",{attrs:{href:"#voice","aria-hidden":"true"}},[t._v("#")]),t._v("Voice")]),r("p",[t._v("This will fire for when a call is initiated, ringing, answered, sent to voicemail or hung up.\nIt will contain from and to number, call ID and which type of call event it is.")]),r("h4",{attrs:{id:"voicemail"}},[r("a",{attrs:{href:"#voicemail","aria-hidden":"true"}},[t._v("#")]),t._v("Voicemail")]),r("p",[t._v("This will fire when a voicemail is left for a subscription.")]),r("p",[t._v("It contains from and to number and the ID of the voicemail. The actual content of the voicemail may be retrieved by\na separate API using this ID.")]),r("DemoConfigurer"),r("h2",{attrs:{id:"listen-for-events"}},[r("a",{attrs:{href:"#listen-for-events","aria-hidden":"true"}},[t._v("#")]),t._v("Listen for events")]),r("CodeSnippet",{attrs:{grpcurlOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/grpcurl/operator/events/get-events.sh",grpcurlThirdpartydev:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/grpcurl/thirdpartydev/events/get-events.sh",kotlinDeps:["event-grpc","utils-grpc"],kotlinOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/operator/events/src/main/kotlin/com/wgtwo/examples/operator/events/GetEvents.kt",kotlinThirdpartydev:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/thirdpartydev/events/src/main/kotlin/com/wgtwo/examples/thirdpartydev/events/GetEvents.kt"}}),r("h2",{attrs:{id:"manual-acknowledge"}},[r("a",{attrs:{href:"#manual-acknowledge","aria-hidden":"true"}},[t._v("#")]),t._v("Manual acknowledge")]),r("p",[t._v("In the below example we enable manual acknowledgement, and set a custom ack timeout.")]),r("CodeSnippet",{attrs:{kotlinDeps:["event-grpc","utils-grpc","protobuf-java-util"],kotlinOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/operator/events/src/main/kotlin/com/wgtwo/examples/operator/events/GetEventsManualAck.kt",kotlinThirdpartydev:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/thirdpartydev/events/src/main/kotlin/com/wgtwo/examples/thirdpartydev/events/GetEventsManualAck.kt"}}),r("h2",{attrs:{id:"concepts"}},[r("a",{attrs:{href:"#concepts","aria-hidden":"true"}},[t._v("#")]),t._v("Concepts")]),r("ul",[r("li",[r("a",{attrs:{href:"https://grpc.io/docs/reference/java/generated-code/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Three types of stubs: asynchronous, blocking, and future")])]),r("li",[r("a",{attrs:{href:"https://grpc.io/docs/guides/concepts/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("gRPC Concepts")])])])],1)}),[],!1,null,null,null);"function"==typeof d&&d(u),"function"==typeof p&&p(u);e.default=u.exports},UQSp:function(t,e,r){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}}}]);