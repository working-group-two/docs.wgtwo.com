(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{MZxt:function(t,e,o){"use strict";o.r(e);var r=o("KHd+"),n=o("LRqJ"),a=o("UQSp"),s=o("Kw5r");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}s.a.config.optionMergeStrategies;var c={CodeSnippet:n.a,VueRemarkRoot:a.a},l=function(t){var e=t.options.components=t.options.components||{},o=t.options.computed=t.options.computed||{};Object.keys(c).forEach((function(t){"object"===i(c[t])&&"function"==typeof c[t].render||"function"==typeof c[t]&&"function"==typeof c[t].options.render?e[t]=c[t]:o[t]=function(){return c[t]}}))},p=s.a.config.optionMergeStrategies,d="__vueRemarkFrontMatter",v={excerpt:null,title:"Listen for events",topic:"events",type:"how-to",roles:["THIRD_PARTY_DEVELOPER","OPERATOR"]};var u=function(t){t.options[d]&&(t.options[d]=v),s.a.util.defineReactive(t.options,d,v),t.options.computed=p.computed({$frontmatter:function(){return t.options[d]}},t.options.computed)},g=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("VueRemarkRoot",[o("h1",{attrs:{id:"how-to-listen-for-events"}},[o("a",{attrs:{href:"#how-to-listen-for-events","aria-hidden":"true"}},[t._v("#")]),t._v("How to listen for Events")]),o("h2",{attrs:{id:"overview"}},[o("a",{attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v("Overview")]),o("p",[t._v("The event API allows you to subscribe to a variety of different events generated by Working Group Two's systems.")]),o("p",[t._v("The examples will start a subscription to voice and voicemail events, which includes call initiated, call ended and\nnew voicemail received.")]),o("h2",{attrs:{id:"event-types"}},[o("a",{attrs:{href:"#event-types","aria-hidden":"true"}},[t._v("#")]),t._v("Event types")]),o("table",[o("thead",[o("tr",[o("th",[t._v("Event type")]),o("th",{attrs:{align:"center"}},[t._v("Operator")]),o("th",{attrs:{align:"center"}},[t._v("Third Party")]),o("th",[t._v("Required right")])])]),o("tbody",[o("tr",[o("td",[t._v("VOICE_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("❔")]),o("td",{attrs:{align:"center"}},[t._v("❔")]),o("td",[o("code",{pre:!0},[t._v("events.voice.subscribe")])])]),o("tr",[o("td",[t._v("VOICEMAIL_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",[o("code",{pre:!0},[t._v("events.voicemail.subscribe")])])]),o("tr",[o("td",[t._v("SMS_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",[o("code",{pre:!0},[t._v("events.sms.subscribe")])])]),o("tr",[o("td",[t._v("LOCATION_UPDATE_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",[o("code",{pre:!0},[t._v("events.location.subscribe")])])]),o("tr",[o("td",[t._v("ROAMING_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",[o("code",{pre:!0},[t._v("events.roaming.subscribe")])])]),o("tr",[o("td",[t._v("TOKEN_AUDIT_EVENT")]),o("td",{attrs:{align:"center"}},[t._v("✔")]),o("td",{attrs:{align:"center"}},[t._v("❌")]),o("td",[o("code",{pre:!0},[t._v("events.audit.token.subscribe")])])])])]),o("table",[o("thead",[o("tr",[o("th"),o("th")])]),o("tbody",[o("tr",[o("td",[t._v("✔")]),o("td",[t._v("Available")])]),o("tr",[o("td",[t._v("❌")]),o("td",[t._v("Not available")])]),o("tr",[o("td",[t._v("❔")]),o("td",[t._v("Under development")])])])]),o("DemoConfigurer"),o("h2",{attrs:{id:"listen-for-events"}},[o("a",{attrs:{href:"#listen-for-events","aria-hidden":"true"}},[t._v("#")]),t._v("Listen for events")]),o("CodeSnippet",{attrs:{grpcurlOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/grpcurl/operator/events/get-events.sh",grpcurlThirdpartydev:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/grpcurl/thirdpartydev/events/get-events.sh",kotlinDeps:["event-grpc","utils-grpc"],kotlinOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/operator/events/src/main/kotlin/GetEvents.kt",kotlinThirdpartydev:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/thirdpartydev/events/src/main/kotlin/GetEvents.kt"}}),o("h2",{attrs:{id:"manual-acknowledge"}},[o("a",{attrs:{href:"#manual-acknowledge","aria-hidden":"true"}},[t._v("#")]),t._v("Manual acknowledge")]),o("p",[t._v("In the below example we enable manual acknowledgement, and set a custom ack timeout.")]),o("CodeSnippet",{attrs:{kotlinDeps:["event-grpc","utils-grpc","protobuf-java-util"],kotlinOperator:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/kotlin/operator/events/src/main/kotlin/GetEventsManualAck.kt"}}),o("h2",{attrs:{id:"concepts"}},[o("a",{attrs:{href:"#concepts","aria-hidden":"true"}},[t._v("#")]),t._v("Concepts")]),o("ul",[o("li",[o("a",{attrs:{href:"https://grpc.io/docs/reference/java/generated-code/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Three types of stubs: asynchronous, blocking, and future")])]),o("li",[o("a",{attrs:{href:"https://grpc.io/docs/guides/concepts/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("gRPC Concepts")])])])],1)}),[],!1,null,null,null);"function"==typeof l&&l(g),"function"==typeof u&&u(g);e.default=g.exports},UQSp:function(t,e,o){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}}}]);