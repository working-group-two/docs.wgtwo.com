(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{UQSp:function(e,t,r){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},jj0k:function(e,t,r){"use strict";r.r(t);var o=r("KHd+"),n=r("UQSp"),a=r("Kw5r");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}a.a.config.optionMergeStrategies;var i={VueRemarkRoot:n.a},p=function(e){var t=e.options.components=e.options.components||{},r=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?t[e]=i[e]:r[e]=function(){return i[e]}}))},c=a.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",u={excerpt:null,title:"Accessing Metrics",topic:"metrics",type:"how-to"};var h=function(e){e.options[l]&&(e.options[l]=u),a.a.util.defineReactive(e.options,l,u),e.options.computed=c.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},f=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("VueRemarkRoot",[r("h1",{attrs:{id:"accessing-metrics"}},[r("a",{attrs:{href:"#accessing-metrics","aria-hidden":"true"}},[e._v("#")]),e._v("Accessing Metrics")]),r("h2",{attrs:{id:"overview"}},[r("a",{attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v("Overview")]),r("p",[e._v("Working Group Two exposes metrics that can help operators getting some operational insight. This data is exposed using the "),r("a",{attrs:{href:"https://openmetrics.io/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("OpenMetrics text format")]),e._v(".")]),r("p",[e._v("This text format is the same as exposed by Prometheus. In addition to being supported by Prometheus, many other systems\nhas OpenMetrics integrations such as\n"),r("a",{attrs:{href:"https://docs.datadoghq.com/integrations/openmetrics/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Datadog")]),e._v("\nand "),r("a",{attrs:{href:"https://docs.newrelic.com/docs/integrations/prometheus-integrations",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("New Relic")]),e._v(".")]),r("p",[e._v("The HTTP endpoint we provide will give you the current state of all of your metrics. We do not provide a query API.")]),r("p",[e._v("Please reach out to clarify what metrics you would need access to.")]),r("p",[e._v("In order to access this API, your credentials need to have the "),r("code",{pre:!0},[e._v("metrics.read")]),e._v(" right.")]),r("p",[r("strong",[e._v("Base path: "),r("code",{pre:!0},[e._v("https://api.wgtwo.com/metrics/v1")])])]),r("DemoConfigurer"),r("h3",{attrs:{id:"curl"}},[r("a",{attrs:{href:"#curl","aria-hidden":"true"}},[e._v("#")]),e._v("Curl")]),r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",{pre:!0,attrs:{class:"language-shell"}},[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s -u "),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLIENT_ID}")]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLIENT_SECRET}")]),e._v(" https://api.wgtwo.com/metrics/v1")])]),r("h3",{attrs:{id:"prometheus"}},[r("a",{attrs:{href:"#prometheus","aria-hidden":"true"}},[e._v("#")]),e._v("Prometheus")]),r("p",[e._v("The below Prometheus config will scrape the metric endpoint from Working Group Two every 30 seconds,\nfetching all available time series. Note that the configuration will contain secrets.")]),r("p",[e._v("See: "),r("a",{attrs:{href:"https://prometheus.io/docs/prometheus/latest/configuration/configuration/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("prometheus.io › Configuration")])]),r("GithubCode",{attrs:{fileUrl:"https://github.com/working-group-two/docs.wgtwo.com/blob/master/examples/metrics/prometheus.yml"}}),r("h4",{attrs:{id:"example-run-with-docker"}},[r("a",{attrs:{href:"#example-run-with-docker","aria-hidden":"true"}},[e._v("#")]),e._v("Example: Run with Docker")]),r("blockquote",[r("p",[e._v("See: "),r("a",{attrs:{href:"https://prometheus.io/docs/prometheus/latest/installation/#using-docker",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("prometheus.io › Using Docker")])])]),r("p",[e._v("If you run the below commands, you should have Prometheus running successfully.")]),r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",{pre:!0,attrs:{class:"language-bash"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Store sample configuration to prometheus.yml, including actual credentials")]),e._v("\n\ndocker run -p "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("9090")]),e._v(":9090 -v prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus")])]),r("h4",{attrs:{id:"grafana"}},[r("a",{attrs:{href:"#grafana","aria-hidden":"true"}},[e._v("#")]),e._v("Grafana")]),r("blockquote",[r("p",[e._v("See: "),r("a",{attrs:{href:"https://grafana.com/docs/grafana/latest/features/datasources/prometheus/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("grafana.com › Using Prometheus in Grafana")])])]),r("p",[e._v("As our metric API does not expose a query API, it cannot be used by Grafana directly.\nHowever, Grafana has built-in support for Prometheus.")]),r("h2",{attrs:{id:"links"}},[r("a",{attrs:{href:"#links","aria-hidden":"true"}},[e._v("#")]),e._v("Links")]),r("ul",[r("li",[r("a",{attrs:{href:"https://openmetrics.io/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("openmetrics.io")])]),r("li",[r("a",{attrs:{href:"https://prometheus.io/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("prometheus.io")]),e._v(" › "),r("a",{attrs:{href:"https://prometheus.io/docs/instrumenting/exposition_formats/#text-based-format",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Exposition Formats")])])])],1)}),[],!1,null,null,null);"function"==typeof p&&p(f),"function"==typeof h&&h(f);t.default=f.exports}}]);